name: Production Rollback

on:
  workflow_dispatch:
    inputs:
      target_version:
        description: 'Git SHA or tag to rollback to'
        required: true
      reason:
        description: 'Reason for rollback'
        required: true
      confirm:
        description: 'Type "CONFIRM" to proceed with rollback'
        required: true

env:
  NODE_VERSION: '18'

jobs:
  validate-rollback:
    name: Validate Rollback Request
    runs-on: ubuntu-latest
    outputs:
      can-rollback: ${{ steps.validation.outputs.can-rollback }}
    steps:
      - name: Validate confirmation
        id: validation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "CONFIRM" ]; then
            echo "Rollback not confirmed. Please type 'CONFIRM' to proceed."
            exit 1
          fi
          
          echo "can-rollback=true" >> $GITHUB_OUTPUT

      - name: Log rollback request
        run: |
          echo "Rollback requested by: ${{ github.actor }}"
          echo "Target version: ${{ github.event.inputs.target_version }}"
          echo "Reason: ${{ github.event.inputs.reason }}"

  rollback-production:
    name: Execute Production Rollback
    runs-on: ubuntu-latest
    needs: validate-rollback
    if: needs.validate-rollback.outputs.can-rollback == 'true'
    environment: production
    steps:
      - name: Checkout target version
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build target version
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          VITE_ENVIRONMENT: production

      - name: Run pre-rollback tests
        run: |
          echo "Running tests on target version..."
          npm run test:critical
        env:
          CI: true

      - name: Execute rollback deployment
        run: |
          echo "Rolling back to version: ${{ github.event.inputs.target_version }}"
          # Add rollback deployment commands here
        env:
          DEPLOY_TOKEN: ${{ secrets.PRODUCTION_DEPLOY_TOKEN }}

      - name: Verify rollback health
        run: |
          echo "Verifying rollback health..."
          npm run health-check:production
          sleep 30
          npm run health-check:production
        env:
          PRODUCTION_URL: ${{ secrets.PRODUCTION_URL }}

      - name: Record rollback in audit log
        run: |
          curl -X POST "${{ secrets.SUPABASE_URL }}/rest/v1/deployment_logs" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "version": "${{ github.event.inputs.target_version }}",
              "environment": "production",
              "deployed_by": "${{ github.actor }}",
              "deployed_at": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'",
              "status": "rollback",
              "rollback_reason": "${{ github.event.inputs.reason }}"
            }'

      - name: Notify rollback completion
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            ðŸ”„ Production rollback completed
            Target Version: ${{ github.event.inputs.target_version }}
            Reason: ${{ github.event.inputs.reason }}
            Executed by: ${{ github.actor }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Create incident report
        if: failure()
        run: |
          echo "Rollback failed - creating incident report..."
          # Add incident reporting logic here
        env:
          INCIDENT_WEBHOOK: ${{ secrets.INCIDENT_WEBHOOK }}